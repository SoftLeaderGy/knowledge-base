import{_ as a,c as e,o as l,a4 as i}from"./chunks/framework.CujM31lN.js";const t="/assets/1690250779566-baded3ec-4b5f-43a9-9c18-95ccd87c96ddasd.DdKvDd8b.jpg",r="/assets/img.B8Dppy_s.png",o="/assets/1669970755868-63d96c3d-01fb-4e88-bc5a-2cb647064b60.CaPKV-kp.png",c="/assets/1669970731993-7137f4b3-6a25-469c-bf39-873f27f643cb.CiumolmS.png",n="/assets/1669970875201-2cc991fa-8c2c-496b-987c-abc9d3af8eaf.DFAyYRLI.png",d="/assets/1669971030289-dda7c3be-44a2-415b-9947-f4584822fcc8.DeTgYtfp.png",s="/assets/1683880680757-b43e7402-bd8a-4b82-b407-6bb33af29e86.CUpfVq3U.png",p="/assets/1683880827527-c1923ca8-463f-4ab4-ab58-5d09fe09f86d.CKZQ45Y-.png",h="/assets/1690250779566-baded3ec-4b5f-43a9-9c18-95ccd87c96dd.BQylGsE2.png",z=JSON.parse('{"title":"Linux","description":"","frontmatter":{},"headers":[],"relativePath":"sidebar/Linux积累篇/Linux/Linux.md","filePath":"sidebar/Linux积累篇/Linux/Linux.md","lastUpdated":1713767287000}'),u={name:"sidebar/Linux积累篇/Linux/Linux.md"},m=i('<h1 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h1><h2 id="基础命令" tabindex="-1">基础命令： <a class="header-anchor" href="#基础命令" aria-label="Permalink to &quot;基础命令：&quot;">​</a></h2><h3 id="shutdown-关机命令" tabindex="-1">shutdown： 关机命令 <a class="header-anchor" href="#shutdown-关机命令" aria-label="Permalink to &quot;shutdown： 关机命令&quot;">​</a></h3><ul><li><p><code>shutdown -h 10</code> 计算机将在10分钟后关机；</p></li><li><p><code>shutdown -r now</code> 系统里吗重启；</p></li><li><p><code>shutdown -r 10</code> 系统10分钟后重启</p></li></ul><ol><li><p>一切皆文件</p></li><li><p>根目录/，所有的文件都挂载在这个节点下。</p></li><li><p>系统下文件目录的作用：</p><ul><li><img src="'+t+`" alt="1690250779566-baded3ec-4b5f-43a9-9c18-95ccd87c96ddasd.jpg"></li></ul></li></ol><h2 id="常用命令" tabindex="-1">常用命令： <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令：&quot;">​</a></h2><h3 id="目录管理" tabindex="-1">目录管理： <a class="header-anchor" href="#目录管理" aria-label="Permalink to &quot;目录管理：&quot;">​</a></h3><p>绝对路径：路径的全称：</p><p>相对路径：相对于现在在的位置 目录所在位置</p><h4 id="cd-切换目录命令" tabindex="-1">cd：切换目录命令 <a class="header-anchor" href="#cd-切换目录命令" aria-label="Permalink to &quot;cd：切换目录命令&quot;">​</a></h4><p>cd  目录名（绝对路径/相对路径）</p><pre><code>./ ：当前目录

.. :   上一级目录

~ : 	回到当前的用户目录
</code></pre><h4 id="ls-列出命令" tabindex="-1">ls : 列出命令 <a class="header-anchor" href="#ls-列出命令" aria-label="Permalink to &quot;ls : 列出命令&quot;">​</a></h4><p>（在Linux中ls是最被常用的命令）</p><pre><code>-a：（all），查看全部文件，包括隐藏文件

-l： 列出全部文件，包含文件的属性和权限，没有隐藏文件

-al： 列出全部文件（包括隐藏文件） 包含属性 和权限
</code></pre><h4 id="pwd-显示当前用户所在的目录" tabindex="-1">pwd； 显示当前用户所在的目录 <a class="header-anchor" href="#pwd-显示当前用户所在的目录" aria-label="Permalink to &quot;pwd； 显示当前用户所在的目录&quot;">​</a></h4><h4 id="mkdir-创建目录" tabindex="-1">mkdir ：创建目录 <a class="header-anchor" href="#mkdir-创建目录" aria-label="Permalink to &quot;mkdir ：创建目录&quot;">​</a></h4><p>(如果文件或者重复 是否覆盖 y/s)</p><pre><code>mkdir text1: 创建text1文件夹

mkdir -p text2/text3: 创建text2下text3文件夹（层级式目录）
</code></pre><h4 id="rmdir-删除文件夹" tabindex="-1">rmdir：删除文件夹 <a class="header-anchor" href="#rmdir-删除文件夹" aria-label="Permalink to &quot;rmdir：删除文件夹&quot;">​</a></h4><p>（remir命令只能删除空的文件夹，里边有文件的需要先删除文件）</p><pre><code>   rmdir text1：删除text1文件夹

	rmdir -p text2/text3: 删除层级目录
</code></pre><h4 id="cp-复制文件或者目录" tabindex="-1">cp：复制文件或者目录 <a class="header-anchor" href="#cp-复制文件或者目录" aria-label="Permalink to &quot;cp：复制文件或者目录&quot;">​</a></h4><pre><code>	cp 原来的地方 新的地方
</code></pre><h4 id="rm-移除文件或者目录" tabindex="-1">rm: 移除文件或者目录 <a class="header-anchor" href="#rm-移除文件或者目录" aria-label="Permalink to &quot;rm: 移除文件或者目录&quot;">​</a></h4><pre><code>	-f： 忽略存在的文件，不会出现警告，强制删除

	-r：递归删除目录

	-i：互动，询问是否删除
</code></pre><h4 id="rm-rf-删除系统中所有文件" tabindex="-1">rm -rf /   ：删除系统中所有文件 <a class="header-anchor" href="#rm-rf-删除系统中所有文件" aria-label="Permalink to &quot;rm -rf /   ：删除系统中所有文件&quot;">​</a></h4><p>删库跑路的做法</p><h4 id="mv-移动文件或者目录-或重命名文件夹" tabindex="-1">mv：移动文件或者目录 或重命名文件夹 <a class="header-anchor" href="#mv-移动文件或者目录-或重命名文件夹" aria-label="Permalink to &quot;mv：移动文件或者目录 或重命名文件夹&quot;">​</a></h4><pre><code>	-f：强制移动

	-u：只替换已经更新过的文件

	mv 文件 新位置

	mv 旧文件夹名  新文件夹名
</code></pre><h4 id="scp-从远程服务器上复制文件-目录" tabindex="-1">scp：从远程服务器上复制文件（目录） <a class="header-anchor" href="#scp-从远程服务器上复制文件-目录" aria-label="Permalink to &quot;scp：从远程服务器上复制文件（目录）&quot;">​</a></h4><pre><code>	scp 用户名@ip地址:文件路径 复制到本地的哪个路径

	实例：scp [root@10.4.4.17](mailto:root@10.4.4.17):/home/icp-web-new/db2文件zip /home/
</code></pre><h4 id="chowd-更改文件属组" tabindex="-1">chowd:更改文件属组 <a class="header-anchor" href="#chowd-更改文件属组" aria-label="Permalink to &quot;chowd:更改文件属组&quot;">​</a></h4><pre><code>	chown [-R] 属主名 文件名

	chown[-R] 属主名：属组名 文件名
</code></pre><h4 id="chmod-更改文件9大属性-重要" tabindex="-1">chmod：更改文件9大属性（重要） <a class="header-anchor" href="#chmod-更改文件9大属性-重要" aria-label="Permalink to &quot;chmod：更改文件9大属性（重要）&quot;">​</a></h4><pre><code>	情景：你没有权限操作此文件

	chmod [-R] xyz  (文件或者目录)
</code></pre><p>读： r：4</p><p>写： w：2</p><p>操作： x：1</p><p>可读可写不可执行 rw-       或。  6</p><p>chmod 777 filename</p><p>给 filename文件 赋予。可读可写可执行操作</p><p>ls -l :查看文件类型、属性、权限</p><p>基本属性：</p><p>第一个字母：</p><pre><code>当为【d】则是目录

当为【-】则是文件

当为【L】则表示为链接文档（link file）
</code></pre><p>接下来的字符中、以三个为一组、且均为【rwx】的三个参数的组合</p><p>其中「r」表示可读、「w」表示可写、「x」表示可执行</p><p>字母的位置不会变化。没有该权限的会出现「-」。 <img src="`+r+'" alt="img.png"></p><h2 id="日常积累" tabindex="-1">日常积累 <a class="header-anchor" href="#日常积累" aria-label="Permalink to &quot;日常积累&quot;">​</a></h2><h3 id="下载文件-sz-文件名" tabindex="-1">下载文件： sz 文件名 <a class="header-anchor" href="#下载文件-sz-文件名" aria-label="Permalink to &quot;下载文件： sz 文件名&quot;">​</a></h3><blockquote><p>从服务端下载到本地 实例： sz bd2-sub-oip-core-1.0-SNAPSHOT.jar</p></blockquote><h3 id="上传文件-rz-文件名" tabindex="-1">上传文件： rz 文件名 <a class="header-anchor" href="#上传文件-rz-文件名" aria-label="Permalink to &quot;上传文件： rz 文件名&quot;">​</a></h3><blockquote><p>实例： rz bd2-sub-oip-core-1.0-SNAPSHOT.jar</p></blockquote><h3 id="替换文件-rz-y" tabindex="-1">替换文件： rz -y <a class="header-anchor" href="#替换文件-rz-y" aria-label="Permalink to &quot;替换文件： rz -y&quot;">​</a></h3><h3 id="找出所有进程pid-ps-ef" tabindex="-1">找出所有进程pid： ps -ef <a class="header-anchor" href="#找出所有进程pid-ps-ef" aria-label="Permalink to &quot;找出所有进程pid： ps -ef&quot;">​</a></h3><h3 id="找出某个进程的pid-ps-ef-grep-进程名" tabindex="-1">找出某个进程的pid： ps -ef| grep 进程名 <a class="header-anchor" href="#找出某个进程的pid-ps-ef-grep-进程名" aria-label="Permalink to &quot;找出某个进程的pid： ps -ef| grep 进程名&quot;">​</a></h3><blockquote><p>实例： ps -ef| grep zookeeper</p></blockquote><h3 id="查看某个端口的pid" tabindex="-1">查看某个端口的pid <a class="header-anchor" href="#查看某个端口的pid" aria-label="Permalink to &quot;查看某个端口的pid&quot;">​</a></h3><blockquote><h3 id="lsof-i-tcp-端口号" tabindex="-1">lsof -i tcp:端口号 <a class="header-anchor" href="#lsof-i-tcp-端口号" aria-label="Permalink to &quot;lsof -i tcp:端口号&quot;">​</a></h3></blockquote><blockquote><p>实例：lsof -i tcp:4200</p></blockquote><h3 id="解压-filename-zip文件" tabindex="-1">解压 fileName.zip文件 <a class="header-anchor" href="#解压-filename-zip文件" aria-label="Permalink to &quot;解压 fileName.zip文件&quot;">​</a></h3><blockquote><p>实例：unzip fileName.zip</p></blockquote><h3 id="重命名文件-filename" tabindex="-1">重命名文件 fileName <a class="header-anchor" href="#重命名文件-filename" aria-label="Permalink to &quot;重命名文件 fileName&quot;">​</a></h3><blockquote><p>实例：mv fileName fileName1</p></blockquote><h3 id="设置文件代码行号" tabindex="-1">设置文件代码行号 <a class="header-anchor" href="#设置文件代码行号" aria-label="Permalink to &quot;设置文件代码行号&quot;">​</a></h3><blockquote><p>:set nu</p></blockquote><h3 id="修改linux挂载的存储" tabindex="-1">修改linux挂载的存储 <a class="header-anchor" href="#修改linux挂载的存储" aria-label="Permalink to &quot;修改linux挂载的存储&quot;">​</a></h3><ol><li>查看存储情况<code>df -h</code></li></ol><p><img src="'+o+'" alt="image.png"></p><ol start="2"><li>修改挂载 <ol><li>修改/etc/fstab文件 <code>vi /etc/fstab</code></li></ol></li></ol><p><img src="'+c+'" alt="image.png"></p><ol start="2"><li>修改为</li></ol><p><img src="'+n+'" alt="image.png"></p><ol start="3"><li><code>mount -a</code></li><li>再次查看存储情况 <code>df -h</code></li></ol><p><img src="'+d+'" alt="image.png"></p><h3 id="linux怎么查看所有用户" tabindex="-1">linux怎么查看所有用户 <a class="header-anchor" href="#linux怎么查看所有用户" aria-label="Permalink to &quot;linux怎么查看所有用户&quot;">​</a></h3><blockquote><p>linux查看所有用户的方法：</p><ol><li>使用cat等文件操作命令读取“/etc/passwd”文件的内容，可打印Linux系统上创建的用户列表。</li><li>使用getent命令查看，语法“getent passwd”，可以显示类似于“/etc/passwd”文件的用户详细信息。</li><li>使用compgen命令，语法“compgen -u”。</li></ol></blockquote><ul><li>参考：<a href="https://m.php.cn/article/500804.html" target="_blank" rel="noreferrer">https://m.php.cn/article/500804.html</a></li></ul><h3 id="查看linux内存使用率" tabindex="-1">查看linux内存使用率 <a class="header-anchor" href="#查看linux内存使用率" aria-label="Permalink to &quot;查看linux内存使用率&quot;">​</a></h3><ul><li>free命令</li></ul><blockquote><p>Free 命令是 Linux 管理员广泛使用的最强大的命令。但与&quot;/proc/meminfo&quot;文件相比，它提供的信息很少。Free 命令显示系统上可用和已用物理内存和交换内存的总量，以及内核使用的缓冲区和缓存。</p></blockquote><p><img src="'+s+'" alt="image.png"> 下面是图中参数字段的含义：</p><ul><li>total: 总内存</li><li>used: 正在运行的进程使用的内存(used= total – free – buff/cache)</li><li>free: 未使用的内存 (free= total – used – buff/cache)</li><li>shared: 多个进程共享的内存</li><li>buffers: 内存保留用于内核操作一个进程队列请求</li><li>cache: 在 RAM 中保存最近使用的文件的页面缓存的大小</li><li>buff/cache: Buffers + Cache</li><li>available: 估计有多少内存可用于启动新应用程序，而无需交换。</li><li>/proc/meminfo文件</li></ul><blockquote><p>&quot;/proc/meminfo&quot;文件是一个拟文件，其中包含有关内存使用情况的各种实时信息。它以千字节为单位显示内存统计信息，其中大多数有点难以理解。但是，它包含有关内存使用情况的有用信息。</p></blockquote><p><img src="'+p+`" alt="image.png"></p><h3 id="防火墙相关" tabindex="-1">防火墙相关 <a class="header-anchor" href="#防火墙相关" aria-label="Permalink to &quot;防火墙相关&quot;">​</a></h3><h4 id="_1、防火墙的开启、关闭、禁用命令" tabindex="-1">1、防火墙的开启、关闭、禁用命令 <a class="header-anchor" href="#_1、防火墙的开启、关闭、禁用命令" aria-label="Permalink to &quot;1、防火墙的开启、关闭、禁用命令&quot;">​</a></h4><ul><li>设置开机启用防火墙：systemctl enable firewalld.service</li><li>设置开机禁用防火墙：systemctl disable firewalld.service</li><li>启动防火墙：systemctl start firewalld</li><li>关闭防火墙：systemctl stop firewalld</li><li>检查防火墙状态：systemctl status firewalld</li></ul><h4 id="_2、使用firewall-cmd配置端口" tabindex="-1">2、使用firewall-cmd配置端口 <a class="header-anchor" href="#_2、使用firewall-cmd配置端口" aria-label="Permalink to &quot;2、使用firewall-cmd配置端口&quot;">​</a></h4><ul><li>查看防火墙状态：firewall-cmd --state</li><li>重新加载配置：firewall-cmd --reload</li><li>查看开放的端口：firewall-cmd --list-ports</li><li>开启防火墙端口：firewall-cmd --zone=public --add-port=9200/tcp --permanent</li><li>命令含义：</li></ul><blockquote><p>–zone #作用域 –add-port=9200/tcp #添加端口，格式为：端口/通讯协议 –permanent #永久生效，没有此参数重启后失效 注意：添加端口后，必须用命令firewall-cmd --reload重新加载一遍才会生效.</p></blockquote><h3 id="从一台服务器copy文件到另一台服务器上" tabindex="-1">从一台服务器copy文件到另一台服务器上 <a class="header-anchor" href="#从一台服务器copy文件到另一台服务器上" aria-label="Permalink to &quot;从一台服务器copy文件到另一台服务器上&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># scp root@ip:文件路径 要copy的位置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@10.58.39.40:/root/index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/</span></span></code></pre></div><h3 id="离线安装unzip命令" tabindex="-1">离线安装unzip命令 <a class="header-anchor" href="#离线安装unzip命令" aria-label="Permalink to &quot;离线安装unzip命令&quot;">​</a></h3><p><a href="https://www.yuque.com/attachments/yuque/0/2023/rpm/13004873/1690250795587-5949bc81-083d-4b49-9933-fd1774d8ed26.rpm" target="_blank" rel="noreferrer">unzip-6.0-19.el7.x86_64.rpm</a></p><ol><li>将 unzip-6.0-19.el7.x86_64.rpm 上传至服务器</li><li>执行 rpm -Uvh unzip-6.0-19.el7.x86_64.rpm 命令安装</li><li><img src="`+h+'" alt="image.png"></li></ol><h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h1>',98),b=[m];function f(q,k,x,g,_,w){return l(),e("div",null,b)}const y=a(u,[["render",f]]);export{z as __pageData,y as default};
