import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.IpiIUH1b.js";const e="/assets/1706084338568-8a700c47-f7cb-48c4-a94e-f4dbf608f102.LrwfUfLH.png",l="/assets/1706084360283-9726d148-d6b3-477b-ac6f-9caaf5a771e2.DPQhhjEE.png",h="/assets/1706084651981-1c20e6bd-59e7-4c47-87c6-1ae293478ace.DsRCQ4l3.png",n="/assets/1706084688275-e87f5fe7-f802-49e2-b8bc-9bc2d4b8639f.Bwa_0BPJ.png",k="/assets/1706085144248-c1e1de81-2853-4ae6-8968-baae1b743636.D-Lma8lI.png",p="/assets/1706085182601-96d8bc46-e3b9-49e6-8d5a-843dd1e3b1b8.CihWK8v4.png",r="/assets/1706086084864-0f486a23-3646-447b-8bb6-d713f526c955.9DaV58uz.png",m=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"sidebar/开源组件构建集成/HertzBeat监控搭建/HertzBeat监控搭建.md","filePath":"sidebar/开源组件构建集成/HertzBeat监控搭建/HertzBeat监控搭建.md","lastUpdated":null}'),d={name:"sidebar/开源组件构建集成/HertzBeat监控搭建/HertzBeat监控搭建.md"},o=t(`<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank" rel="noreferrer">HertzBeat 赫兹跳动</a> 是一个拥有强大自定义监控能力，高性能集群，兼容 Prometheus，无需 Agent 的开源实时监控告警系统。</p><blockquote><p>易用友好的开源实时监控告警系统，无需Agent，高性能集群，兼容Prometheus，强大自定义监控能力。</p></blockquote><ul><li>官网：<a href="https://hertzbeat.com/zh-cn/" target="_blank" rel="noreferrer">HertzBeat · An open source, real-time monitoring tool with custom-monitor and agentLess. | HertzBeat</a></li><li>gitee：<a href="https://gitee.com/dromara/hertzbeat#https://gitee.com/link?target=https%3A%2F%2Fhertzbeat.com" target="_blank" rel="noreferrer">dromara/hertzbeat</a></li></ul><h1 id="安装搭建" tabindex="-1">安装搭建 <a class="header-anchor" href="#安装搭建" aria-label="Permalink to &quot;安装搭建&quot;">​</a></h1><blockquote><p>HertzBeat支持通过源码安装启动，Docker容器运行和安装包方式安装部署，CPU架构支持X86/ARM64。</p></blockquote><h2 id="方式一-docker方式快速安装" tabindex="-1">方式一：Docker方式快速安装 <a class="header-anchor" href="#方式一-docker方式快速安装" aria-label="Permalink to &quot;方式一：Docker方式快速安装&quot;">​</a></h2><ol><li>docker 环境仅需一条命令即可开始</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1157:1157</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1158:1158</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hertzbeat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tancloud/hertzbeat</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">或者使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quay.io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (若 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dockerhub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 网络链接超时</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1157:1157</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1158:1158</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hertzbeat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quay.io/tancloud/hertzbeat</span></span></code></pre></div><ol start="2"><li>浏览器访问 <code>http://localhost:1157</code> 即可开始，默认账号密码 <code>admin/hertzbeat</code></li><li>部署采集器集群</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IDENTITY=custom-collector-name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MANAGER_HOST=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127.0.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MANAGER_PORT=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1158</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hertzbeat-collector</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tancloud/hertzbeat-collector</span></span></code></pre></div><ul><li><code>-e IDENTITY=custom-collector-name</code> : 配置此采集器的唯一性标识符名称，多个采集器名称不能相同，建议自定义英文名称。</li><li><code>-e MODE=public</code> : 配置运行模式(public or private), 公共集群模式或私有云边模式。</li><li><code>-e MANAGER_HOST=127.0.0.1</code> : 配置连接主HertzBeat服务的对外IP。</li><li><code>-e MANAGER_PORT=1158</code> : 配置连接主HertzBeat服务的对外端口，默认1158。</li></ul><h2 id="其他方式-请阅读官方文档-快速开始-hertzbeat" tabindex="-1">其他方式：请阅读官方文档：<a href="https://hertzbeat.com/zh-cn/docs/start/quickstart/" target="_blank" rel="noreferrer">快速开始 | HertzBeat</a> <a class="header-anchor" href="#其他方式-请阅读官方文档-快速开始-hertzbeat" aria-label="Permalink to &quot;其他方式：请阅读官方文档：[快速开始 | HertzBeat](https://hertzbeat.com/zh-cn/docs/start/quickstart/)&quot;">​</a></h2><h1 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h1><ul><li>本次使用的是docker方式安装启动</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1157:1157</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1158:1158</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hertzbeat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tancloud/hertzbeat</span></span></code></pre></div><ul><li>查看容器状态</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@yang docker]# docker ps </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       COMMAND</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                  CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">              PORTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                                                                                NAMES</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                                         nginxnew</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">e8159d7f701d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        tancloud/hertzbeat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;./bin/entrypoint.sh&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hours</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> About</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hour</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    22/tcp,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.0.0.0:1157-1158</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1157-1158/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                                             hertzbeat</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@yang docker]#</span></span></code></pre></div><ul><li>访问测试 <ul><li>浏览器输入：<code>ip:1157</code>进入登录界面</li><li>默认账号密码：<code>admin/hertzbeat</code></li><li><img src="`+e+'" alt="image.png"></li><li><img src="'+l+'" alt="image.png"></li><li>正常进来后的监控总览是没有的，需要后续添加</li></ul></li></ul><h1 id="添加监控" tabindex="-1">添加监控 <a class="header-anchor" href="#添加监控" aria-label="Permalink to &quot;添加监控&quot;">​</a></h1><h2 id="linux操作系统监控" tabindex="-1">linux操作系统监控 <a class="header-anchor" href="#linux操作系统监控" aria-label="Permalink to &quot;linux操作系统监控&quot;">​</a></h2><ol><li><img src="'+h+'" alt="image.png"></li><li><img src="'+n+'" alt="image.png"></li><li>点击<code>测试</code></li><li>点击<code>确定</code>即可</li><li>效果展示 <ol><li><img src="'+k+'" alt="image.png"></li><li><img src="'+p+'" alt="image.png"></li></ol></li></ol><h2 id="其他监控同理" tabindex="-1">其他监控同理 <a class="header-anchor" href="#其他监控同理" aria-label="Permalink to &quot;其他监控同理&quot;">​</a></h2><h2 id="注意" tabindex="-1">注意： <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意：&quot;">​</a></h2><h3 id="docker监控需要开放docker服务的2375端口" tabindex="-1">docker监控需要开放docker服务的2375端口 <a class="header-anchor" href="#docker监控需要开放docker服务的2375端口" aria-label="Permalink to &quot;docker监控需要开放docker服务的2375端口&quot;">​</a></h3><h4 id="开放步骤" tabindex="-1">开放步骤： <a class="header-anchor" href="#开放步骤" aria-label="Permalink to &quot;开放步骤：&quot;">​</a></h4><ol><li>配置docker远程连接端口</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib/systemd/system/docker.service</span></span></code></pre></div><ol start="2"><li>找到 ExecStart，在最后面添加 -H tcp://0.0.0.0:2375 \\ -H unix://var/run/docker.sock \\</li></ol><p><img src="'+r+`" alt="image.png"></p><ol start="3"><li>重启docker</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><ol start="4"><li>开放端口</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=2375/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span></code></pre></div><h3 id="docker端口开放后再次启动容器时报错" tabindex="-1">docker端口开放后再次启动容器时报错 <a class="header-anchor" href="#docker端口开放后再次启动容器时报错" aria-label="Permalink to &quot;docker端口开放后再次启动容器时报错&quot;">​</a></h3><ul><li>报错内容：Error response from daemon: shim error: docker-runc not installed on system</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]#docker start f6d32747432a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> response</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-runc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> installed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containers:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f6d32747432a</span></span></code></pre></div><ul><li>解决方案 <ol><li>首先查看/usr/libexec/docker/，建立软连接</li></ol></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]#cd /usr/libexec/docker/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]#sudo ln -s docker-runc-current docker-runc</span></span></code></pre></div><ol start="2"><li>仍报错，建立全局软连接：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]#sudo ln -s /usr/libexec/docker/docker-runc-current /usr/bin/docker-runc</span></span></code></pre></div><ol start="3"><li>再次尝试启动，启动成功</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]#docker start f6d32747432a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">f6d32747432a</span></span></code></pre></div>`,43),c=[o];function F(g,y,u,C,E,b){return a(),i("div",null,c)}const v=s(d,[["render",F]]);export{m as __pageData,v as default};
